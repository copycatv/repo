<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.1011.0410                               -->
<workbook original-version='18.1' source-build='2023.1.7 (20231.23.1011.0410)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='参数 1' datatype='real' name='[参数 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='df_gdp+' inline='true' name='federated.1l279qm06t08nm1ba8hm50wm7bbe' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_gdp' name='textscan.06klbd10upslbx12def1v0m3hszi'>
            <connection class='textscan' directory='D:/Course/COMP4462/final_proj/data' filename='df_gdp.csv' password='' server='' />
          </named-connection>
          <named-connection caption='HK adult literacy rate' name='excel-direct.191nl7705q57801ba52ca0gpcnt5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Course/COMP4462/final_proj/data/HK adult literacy rate.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='GDP Per Capita' name='textscan.0ny2pz418dw64h1eyh8au0qwbff4'>
            <connection class='textscan' directory='D:/Course/COMP4462/final_proj/data' filename='GDP Per Capita.csv' password='' server='' />
          </named-connection>
          <named-connection caption='urban population ratio' name='excel-direct.1i244pw1bqrudf1bnaxvz0djau48'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Course/COMP4462/final_proj/data/urban population ratio.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='life expentancy' name='excel-direct.146o9fc1vtxufk184nktq1eg5k54'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='D:/Course/COMP4462/final_proj/data/life expentancy.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='hong-kong-inflation-rate-cpi' name='textscan.1fm8tut01hi5ff13qu7mv12c8w3k'>
            <connection class='textscan' cleaning='yes' csvFile='D:/Course/COMP4462/final_proj/data/hong-kong-inflation-rate-cpi.csv' directory='D:/Course/COMP4462/final_proj/data' filename='hong-kong-inflation-rate-cpi.csv' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0ny2pz418dw64h1eyh8au0qwbff4' name='GDP Per Capita.csv' table='[D:\Course\COMP4462\final_proj\data\GDP Per Capita#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
            <column datatype='integer' name='label' ordinal='0' />
            <column datatype='real' name='GDP Per Capita (USD)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_gdp.csv' table='[D:\Course\COMP4462\final_proj\data\df_gdp#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='integer' date-parse-format='yyyy' name='CCYY' ordinal='0' />
              <column datatype='integer' name='GDP' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0ny2pz418dw64h1eyh8au0qwbff4' name='GDP Per Capita.csv' table='[D:\Course\COMP4462\final_proj\data\GDP Per Capita#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='integer' name='label' ordinal='0' />
              <column datatype='real' name='GDP Per Capita (USD)' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.191nl7705q57801ba52ca0gpcnt5' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='real' name='adult literacy rate%' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1i244pw1bqrudf1bnaxvz0djau48' name='Sheet11' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:D65:no:A1:D65:1' header='yes' lost='0' outcome='1' processed='251'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='integer' name='Population' ordinal='1' />
              <column datatype='real' name='% of Total' ordinal='2' />
              <column datatype='real' name='Change' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.146o9fc1vtxufk184nktq1eg5k54' name='Sheet12' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:C76:no:A1:C76:1' header='yes' lost='0' outcome='1' processed='222'>
              <column datatype='integer' name='Year' ordinal='0' />
              <column datatype='real' name='Life Expectancy' ordinal='1' />
              <column datatype='real' name='Growth Rate' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_LF.csv' table='[D:\Course\COMP4462\final_proj\data\df_LF#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='STAT_VAR' ordinal='0' />
              <column datatype='integer' name='CCYY' ordinal='1' />
              <column datatype='real' name='OBS_VALUE' ordinal='2' />
              <column datatype='real' name='employment_rate' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_age_to_group.csv' table='[D:\Course\COMP4462\final_proj\data\df_age_to_group#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='SEX' ordinal='0' />
              <column datatype='integer' name='AGE' ordinal='1' />
              <column datatype='integer' name='CCYY' ordinal='2' />
              <column datatype='real' name='OBS_VALUE' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_male_ratio.csv' table='[D:\Course\COMP4462\final_proj\data\df_male_ratio#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='SEX' ordinal='0' />
              <column datatype='string' name='AGE' ordinal='1' />
              <column datatype='integer' name='CCYY' ordinal='2' />
              <column datatype='real' name='OBS_VALUE' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_population.csv' table='[D:\Course\COMP4462\final_proj\data\df_population#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='integer' name='CCYY' ordinal='0' />
              <column datatype='integer' name='Population' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.1fm8tut01hi5ff13qu7mv12c8w3k' name='hong-kong-inflation-rate-cpi.csv' table='[D:\Course\COMP4462\final_proj\data\hong-kong-inflation-rate-cpi#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='integer' name='date' ordinal='0' />
              <column datatype='real' name='Inflation Rate (%)' ordinal='1' />
              <column datatype='real' name='Annual Change' ordinal='2' />
              <column datatype='string' name='F4' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[% of Total]' value='[Sheet11].[% of Total]' />
          <map key='[AGE (df_age_to_group.csv)]' value='[df_age_to_group.csv].[AGE]' />
          <map key='[AGE]' value='[df_male_ratio.csv].[AGE]' />
          <map key='[Annual Change]' value='[hong-kong-inflation-rate-cpi.csv].[Annual Change]' />
          <map key='[CCYY (df_LF.csv)]' value='[df_LF.csv].[CCYY]' />
          <map key='[CCYY (df_age_to_group.csv)]' value='[df_age_to_group.csv].[CCYY]' />
          <map key='[CCYY (df_male_ratio.csv)]' value='[df_male_ratio.csv].[CCYY]' />
          <map key='[CCYY (df_population.csv)]' value='[df_population.csv].[CCYY]' />
          <map key='[CCYY]' value='[df_gdp.csv].[CCYY]' />
          <map key='[Change]' value='[Sheet11].[Change]' />
          <map key='[F4]' value='[hong-kong-inflation-rate-cpi.csv].[F4]' />
          <map key='[GDP Per Capita (USD)]' value='[GDP Per Capita.csv].[GDP Per Capita (USD)]' />
          <map key='[GDP]' value='[df_gdp.csv].[GDP]' />
          <map key='[Growth Rate]' value='[Sheet12].[Growth Rate]' />
          <map key='[Inflation Rate (%)]' value='[hong-kong-inflation-rate-cpi.csv].[Inflation Rate (%)]' />
          <map key='[Life Expectancy]' value='[Sheet12].[Life Expectancy]' />
          <map key='[OBS_VALUE (df_age_to_group.csv)]' value='[df_age_to_group.csv].[OBS_VALUE]' />
          <map key='[OBS_VALUE (df_male_ratio.csv)]' value='[df_male_ratio.csv].[OBS_VALUE]' />
          <map key='[OBS_VALUE]' value='[df_LF.csv].[OBS_VALUE]' />
          <map key='[Population (Sheet11)]' value='[Sheet11].[Population]' />
          <map key='[Population]' value='[df_population.csv].[Population]' />
          <map key='[SEX (df_age_to_group.csv)]' value='[df_age_to_group.csv].[SEX]' />
          <map key='[SEX]' value='[df_male_ratio.csv].[SEX]' />
          <map key='[STAT_VAR]' value='[df_LF.csv].[STAT_VAR]' />
          <map key='[Year (Sheet12)]' value='[Sheet12].[Year]' />
          <map key='[Year]' value='[Sheet11].[Year]' />
          <map key='[adult literacy rate%]' value='[Sheet1].[adult literacy rate%]' />
          <map key='[date]' value='[hong-kong-inflation-rate-cpi.csv].[date]' />
          <map key='[employment_rate]' value='[df_LF.csv].[employment_rate]' />
          <map key='[label]' value='[GDP Per Capita.csv].[label]' />
          <map key='[year]' value='[Sheet1].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_gdp.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP Per Capita.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D65:no:A1:D65:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>251</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C76:no:A1:C76:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>222</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_LF.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_age_to_group.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_male_ratio.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hong-kong-inflation-rate-cpi.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCYY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CCYY]</local-name>
            <parent-name>[df_gdp.csv]</parent-name>
            <remote-alias>CCYY</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[df_gdp.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>label</remote-name>
            <remote-type>20</remote-type>
            <local-name>[label]</local-name>
            <parent-name>[GDP Per Capita.csv]</parent-name>
            <remote-alias>label</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP Per Capita (USD)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP Per Capita (USD)]</local-name>
            <parent-name>[GDP Per Capita.csv]</parent-name>
            <remote-alias>GDP Per Capita (USD)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adult literacy rate%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[adult literacy rate%]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>adult literacy rate%</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of Total]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>% of Total</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Change]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>Change</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Sheet12)]</local-name>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy]</local-name>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias>Life Expectancy</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Growth Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Growth Rate]</local-name>
            <parent-name>[Sheet12]</parent-name>
            <remote-alias>Growth Rate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STAT_VAR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STAT_VAR]</local-name>
            <parent-name>[df_LF.csv]</parent-name>
            <remote-alias>STAT_VAR</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCYY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CCYY (df_LF.csv)]</local-name>
            <parent-name>[df_LF.csv]</parent-name>
            <remote-alias>CCYY</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_VALUE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OBS_VALUE]</local-name>
            <parent-name>[df_LF.csv]</parent-name>
            <remote-alias>OBS_VALUE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>employment_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[employment_rate]</local-name>
            <parent-name>[df_LF.csv]</parent-name>
            <remote-alias>employment_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SEX (df_age_to_group.csv)]</local-name>
            <parent-name>[df_age_to_group.csv]</parent-name>
            <remote-alias>SEX</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AGE (df_age_to_group.csv)]</local-name>
            <parent-name>[df_age_to_group.csv]</parent-name>
            <remote-alias>AGE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCYY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CCYY (df_age_to_group.csv)]</local-name>
            <parent-name>[df_age_to_group.csv]</parent-name>
            <remote-alias>CCYY</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_VALUE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OBS_VALUE (df_age_to_group.csv)]</local-name>
            <parent-name>[df_age_to_group.csv]</parent-name>
            <remote-alias>OBS_VALUE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SEX]</local-name>
            <parent-name>[df_male_ratio.csv]</parent-name>
            <remote-alias>SEX</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AGE]</local-name>
            <parent-name>[df_male_ratio.csv]</parent-name>
            <remote-alias>AGE</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCYY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CCYY (df_male_ratio.csv)]</local-name>
            <parent-name>[df_male_ratio.csv]</parent-name>
            <remote-alias>CCYY</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_VALUE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OBS_VALUE (df_male_ratio.csv)]</local-name>
            <parent-name>[df_male_ratio.csv]</parent-name>
            <remote-alias>OBS_VALUE</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCYY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CCYY (df_population.csv)]</local-name>
            <parent-name>[df_population.csv]</parent-name>
            <remote-alias>CCYY</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[df_population.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>20</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[hong-kong-inflation-rate-cpi.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inflation Rate (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Inflation Rate (%)]</local-name>
            <parent-name>[hong-kong-inflation-rate-cpi.csv]</parent-name>
            <remote-alias>Inflation Rate (%)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual Change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual Change]</local-name>
            <parent-name>[hong-kong-inflation-rate-cpi.csv]</parent-name>
            <remote-alias>Annual Change</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[hong-kong-inflation-rate-cpi.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Urban Population(% of Total)' datatype='real' name='[% of Total]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228237905922:qk:2]&quot;' value='GDP' />
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228238475267:qk:2]&quot;' value='GDP Per Capita' />
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228238782468:qk:2]&quot;' value='Inflation Rate' />
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239167493:qk:2]&quot;' value='Population' />
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239364102:qk:2]&quot;' value='Employment Rate' />
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239724551:qk:2]&quot;' value='Average Age' />
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239966216:qk:2]&quot;' value='Adult Literacy Rate' />
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228240281610:qk:2]&quot;' value='Life Expectancy' />
          <alias key='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228240486411:qk:2]&quot;' value='Male Ratio' />
        </aliases>
      </column>
      <column caption='AGE (df age to group.csv)' datatype='integer' name='[AGE (df_age_to_group.csv)]' role='measure' type='quantitative' />
      <column caption='CCYY (df LF.csv)' datatype='integer' name='[CCYY (df_LF.csv)]' role='measure' type='quantitative' />
      <column caption='CCYY (df age to group.csv)' datatype='integer' name='[CCYY (df_age_to_group.csv)]' role='measure' type='quantitative' />
      <column caption='CCYY (df male ratio.csv)' datatype='integer' name='[CCYY (df_male_ratio.csv)]' role='measure' type='quantitative' />
      <column caption='CCYY (df population.csv)' datatype='integer' name='[CCYY (df_population.csv)]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[CCYY]' role='dimension' type='ordinal' />
      <column caption='GDP - Norm' datatype='real' name='[Calculation_1476899228237905922]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([GDP]) - WINDOW_MIN(SUM([GDP])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([GDP])) - WINDOW_MIN(SUM([GDP])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='GDP Per Capita - Norm' datatype='real' name='[Calculation_1476899228238475267]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([GDP Per Capita (USD)]) - WINDOW_MIN(SUM([GDP Per Capita (USD)])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([GDP Per Capita (USD)])) - WINDOW_MIN(SUM([GDP Per Capita (USD)])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Inflation Rate - Norm' datatype='real' name='[Calculation_1476899228238782468]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Inflation Rate (%)]) - WINDOW_MIN(SUM([Inflation Rate (%)])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Inflation Rate (%)])) - WINDOW_MIN(SUM([Inflation Rate (%)])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Population - Norm' datatype='real' name='[Calculation_1476899228239167493]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Population]) - WINDOW_MIN(SUM([Population])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Population])) - WINDOW_MIN(SUM([Population])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Employment Rate - Norm' datatype='real' name='[Calculation_1476899228239364102]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([employment_rate]) - WINDOW_MIN(SUM([employment_rate])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([employment_rate])) - WINDOW_MIN(SUM([employment_rate])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Average Age - Norm' datatype='real' name='[Calculation_1476899228239724551]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Calculation_481322235096121344]) - WINDOW_MIN(SUM([Calculation_481322235096121344])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Calculation_481322235096121344])) - WINDOW_MIN(SUM([Calculation_481322235096121344])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Adult Literacy Rate - Norm' datatype='real' name='[Calculation_1476899228239966216]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([adult literacy rate%]) - WINDOW_MIN(SUM([adult literacy rate%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([adult literacy rate%])) - WINDOW_MIN(SUM([adult literacy rate%])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Life Expectancy - Norm' datatype='real' name='[Calculation_1476899228240281610]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Life Expectancy]) - WINDOW_MIN(SUM([Life Expectancy])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Life Expectancy])) - WINDOW_MIN(SUM([Life Expectancy])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Male Ratio - Norm' datatype='real' name='[Calculation_1476899228240486411]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([OBS_VALUE (df_male_ratio.csv)]) - WINDOW_MIN(SUM([OBS_VALUE (df_male_ratio.csv)])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([OBS_VALUE (df_male_ratio.csv)])) - WINDOW_MIN(SUM([OBS_VALUE (df_male_ratio.csv)])))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Urban Population Rate - Norm' datatype='real' name='[Calculation_1476899228240711692]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='Avg Age' datatype='real' name='[Calculation_481322235096121344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[AGE (df_age_to_group.csv)]*[OBS_VALUE (df_age_to_group.csv)]/100' />
      </column>
      <column caption='GDP (Million HK$)' datatype='integer' name='[GDP]' role='measure' type='quantitative' />
      <column caption='OBS VALUE (df age to group.csv)' datatype='real' name='[OBS_VALUE (df_age_to_group.csv)]' role='measure' type='quantitative' />
      <column caption='Male Ratio (%)' datatype='real' name='[OBS_VALUE (df_male_ratio.csv)]' role='measure' type='quantitative' />
      <column caption='Obs Value' datatype='real' name='[OBS_VALUE]' role='measure' type='quantitative' />
      <column caption='SEX (df age to group.csv)' datatype='string' name='[SEX (df_age_to_group.csv)]' role='dimension' type='nominal' />
      <column caption='Stat Var' datatype='string' name='[STAT_VAR]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year (日期)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='MAKEDATE( [CCYY], 1, 1 )' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='GDP Per Capita.csv' datatype='table' name='[__tableau_internal_object_id__].[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Literacy' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Urban Population Ratio' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Life Exp' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FEC26578D692450BB09D390B2967B4C1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_LF.csv' datatype='table' name='[__tableau_internal_object_id__].[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_age_to_group.csv' datatype='table' name='[__tableau_internal_object_id__].[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_gdp.csv' datatype='table' name='[__tableau_internal_object_id__].[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_male_ratio.csv' datatype='table' name='[__tableau_internal_object_id__].[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_population.csv' datatype='table' name='[__tableau_internal_object_id__].[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='hong-kong-inflation-rate-cpi.csv' datatype='table' name='[__tableau_internal_object_id__].[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]' role='measure' type='quantitative' />
      <column caption='Adult Literacy Rate%' datatype='real' name='[adult literacy rate%]' role='measure' type='quantitative' />
      <column caption='Date' datatype='integer' name='[date]' role='measure' type='quantitative' />
      <column caption='Employment Rate' datatype='real' name='[employment_rate]' role='measure' type='quantitative' />
      <column caption='Year - 2' datatype='integer' name='[label]' role='measure' type='quantitative' />
      <column caption='Year1' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[CCYY]' derivation='None' name='[none:CCYY:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1476899228237905922]' derivation='User' name='[usr:Calculation_1476899228237905922:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1476899228238475267]' derivation='User' name='[usr:Calculation_1476899228238475267:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1476899228238782468]' derivation='User' name='[usr:Calculation_1476899228238782468:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1476899228239167493]' derivation='User' name='[usr:Calculation_1476899228239167493:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1476899228239364102]' derivation='User' name='[usr:Calculation_1476899228239364102:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1476899228239724551]' derivation='User' name='[usr:Calculation_1476899228239724551:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1476899228239966216]' derivation='User' name='[usr:Calculation_1476899228239966216:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1476899228240281610]' derivation='User' name='[usr:Calculation_1476899228240281610:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1476899228240486411]' derivation='User' name='[usr:Calculation_1476899228240486411:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
      </column-instance>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='zh_CN' class='hyper' dbname='C:/Users/18477/Documents/我的 Tableau 存储库/数据源/df_gdp+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/21/2023 04:58:41 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C' table='[Extract].[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' table='[Extract].[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]' type='table' />
            <relation name='GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C' table='[Extract].[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]' type='table' />
            <relation name='Sheet1_42DE99CD7F434714B4CEC1206C3A554B' table='[Extract].[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]' type='table' />
            <relation name='Sheet1_77312F442B7046F1B6A5ED9343B5A7D3' table='[Extract].[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]' type='table' />
            <relation name='Sheet1_FEC26578D692450BB09D390B2967B4C1' table='[Extract].[Sheet1_FEC26578D692450BB09D390B2967B4C1]' type='table' />
            <relation name='df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D' table='[Extract].[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]' type='table' />
            <relation name='df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72' table='[Extract].[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]' type='table' />
            <relation name='df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5' table='[Extract].[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]' type='table' />
            <relation name='df_population.csv_076F6A62184E4758B75F7CC2F5914EFE' table='[Extract].[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]' type='table' />
            <relation name='hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A' table='[Extract].[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[% of Total]' value='[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3].[% of Total]' />
            <map key='[AGE (df_age_to_group.csv)]' value='[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72].[AGE]' />
            <map key='[AGE]' value='[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5].[AGE]' />
            <map key='[Annual Change]' value='[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A].[Annual Change]' />
            <map key='[CCYY (df_LF.csv)]' value='[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D].[CCYY]' />
            <map key='[CCYY (df_age_to_group.csv)]' value='[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72].[CCYY]' />
            <map key='[CCYY (df_male_ratio.csv)]' value='[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5].[CCYY]' />
            <map key='[CCYY (df_population.csv)]' value='[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE].[CCYY]' />
            <map key='[CCYY]' value='[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7].[CCYY]' />
            <map key='[Change]' value='[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3].[Change]' />
            <map key='[F4]' value='[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A].[F4]' />
            <map key='[GDP Per Capita (USD)]' value='[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C].[GDP Per Capita (USD)]' />
            <map key='[GDP]' value='[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7].[GDP]' />
            <map key='[Growth Rate]' value='[Sheet1_FEC26578D692450BB09D390B2967B4C1].[Growth Rate]' />
            <map key='[Inflation Rate (%)]' value='[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A].[Inflation Rate (%)]' />
            <map key='[Life Expectancy]' value='[Sheet1_FEC26578D692450BB09D390B2967B4C1].[Life Expectancy]' />
            <map key='[OBS_VALUE (df_age_to_group.csv)]' value='[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72].[OBS_VALUE]' />
            <map key='[OBS_VALUE (df_male_ratio.csv)]' value='[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5].[OBS_VALUE]' />
            <map key='[OBS_VALUE]' value='[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D].[OBS_VALUE]' />
            <map key='[Population (Sheet11)]' value='[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3].[Population]' />
            <map key='[Population]' value='[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE].[Population]' />
            <map key='[SEX (df_age_to_group.csv)]' value='[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72].[SEX]' />
            <map key='[SEX]' value='[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5].[SEX]' />
            <map key='[STAT_VAR]' value='[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D].[STAT_VAR]' />
            <map key='[Year (Sheet12)]' value='[Sheet1_FEC26578D692450BB09D390B2967B4C1].[Year]' />
            <map key='[Year]' value='[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3].[Year]' />
            <map key='[adult literacy rate%]' value='[Sheet1_42DE99CD7F434714B4CEC1206C3A554B].[adult literacy rate%]' />
            <map key='[date]' value='[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A].[date]' />
            <map key='[employment_rate]' value='[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D].[employment_rate]' />
            <map key='[label]' value='[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C].[label]' />
            <map key='[year]' value='[Sheet1_42DE99CD7F434714B4CEC1206C3A554B].[year]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='df_gdp+' increment-value='%null%' refresh-type='create' rows-inserted='4136' timestamp-start='2023-11-21 16:58:40.729' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>CCYY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CCYY]</local-name>
              <parent-name>[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]</parent-name>
              <remote-alias>CCYY</remote-alias>
              <ordinal>0</ordinal>
              <family>df_gdp.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GDP]</local-name>
              <parent-name>[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]</parent-name>
              <remote-alias>GDP</remote-alias>
              <ordinal>1</ordinal>
              <family>df_gdp.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>label</remote-name>
              <remote-type>20</remote-type>
              <local-name>[label]</local-name>
              <parent-name>[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]</parent-name>
              <remote-alias>label</remote-alias>
              <ordinal>2</ordinal>
              <family>GDP Per Capita.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP Per Capita (USD)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP Per Capita (USD)]</local-name>
              <parent-name>[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]</parent-name>
              <remote-alias>GDP Per Capita (USD)</remote-alias>
              <ordinal>3</ordinal>
              <family>GDP Per Capita.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>adult literacy rate%</remote-name>
              <remote-type>5</remote-type>
              <local-name>[adult literacy rate%]</local-name>
              <parent-name>[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]</parent-name>
              <remote-alias>adult literacy rate%</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet11</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population (Sheet11)]</local-name>
              <parent-name>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet11</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>63</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% of Total</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% of Total]</local-name>
              <parent-name>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</parent-name>
              <remote-alias>% of Total</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet11</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Change]</local-name>
              <parent-name>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</parent-name>
              <remote-alias>Change</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet11</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (Sheet12)]</local-name>
              <parent-name>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet12</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life Expectancy]</local-name>
              <parent-name>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</parent-name>
              <remote-alias>Life Expectancy</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet12</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Growth Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Growth Rate]</local-name>
              <parent-name>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</parent-name>
              <remote-alias>Growth Rate</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet12</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FEC26578D692450BB09D390B2967B4C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STAT_VAR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STAT_VAR]</local-name>
              <parent-name>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</parent-name>
              <remote-alias>STAT_VAR</remote-alias>
              <ordinal>13</ordinal>
              <family>df_LF.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CCYY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CCYY (df_LF.csv)]</local-name>
              <parent-name>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</parent-name>
              <remote-alias>CCYY</remote-alias>
              <ordinal>14</ordinal>
              <family>df_LF.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_VALUE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OBS_VALUE]</local-name>
              <parent-name>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</parent-name>
              <remote-alias>OBS_VALUE</remote-alias>
              <ordinal>15</ordinal>
              <family>df_LF.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>employment_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[employment_rate]</local-name>
              <parent-name>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</parent-name>
              <remote-alias>employment_rate</remote-alias>
              <ordinal>16</ordinal>
              <family>df_LF.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SEX</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SEX (df_age_to_group.csv)]</local-name>
              <parent-name>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</parent-name>
              <remote-alias>SEX</remote-alias>
              <ordinal>17</ordinal>
              <family>df_age_to_group.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AGE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AGE (df_age_to_group.csv)]</local-name>
              <parent-name>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</parent-name>
              <remote-alias>AGE</remote-alias>
              <ordinal>18</ordinal>
              <family>df_age_to_group.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CCYY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CCYY (df_age_to_group.csv)]</local-name>
              <parent-name>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</parent-name>
              <remote-alias>CCYY</remote-alias>
              <ordinal>19</ordinal>
              <family>df_age_to_group.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_VALUE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OBS_VALUE (df_age_to_group.csv)]</local-name>
              <parent-name>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</parent-name>
              <remote-alias>OBS_VALUE</remote-alias>
              <ordinal>20</ordinal>
              <family>df_age_to_group.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SEX</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SEX]</local-name>
              <parent-name>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</parent-name>
              <remote-alias>SEX</remote-alias>
              <ordinal>21</ordinal>
              <family>df_male_ratio.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AGE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AGE]</local-name>
              <parent-name>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</parent-name>
              <remote-alias>AGE</remote-alias>
              <ordinal>22</ordinal>
              <family>df_male_ratio.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CCYY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CCYY (df_male_ratio.csv)]</local-name>
              <parent-name>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</parent-name>
              <remote-alias>CCYY</remote-alias>
              <ordinal>23</ordinal>
              <family>df_male_ratio.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_VALUE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OBS_VALUE (df_male_ratio.csv)]</local-name>
              <parent-name>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</parent-name>
              <remote-alias>OBS_VALUE</remote-alias>
              <ordinal>24</ordinal>
              <family>df_male_ratio.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CCYY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CCYY (df_population.csv)]</local-name>
              <parent-name>[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]</parent-name>
              <remote-alias>CCYY</remote-alias>
              <ordinal>25</ordinal>
              <family>df_population.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>26</ordinal>
              <family>df_population.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>20</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>27</ordinal>
              <family>hong-kong-inflation-rate-cpi.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Inflation Rate (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Inflation Rate (%)]</local-name>
              <parent-name>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</parent-name>
              <remote-alias>Inflation Rate (%)</remote-alias>
              <ordinal>28</ordinal>
              <family>hong-kong-inflation-rate-cpi.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>41</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual Change</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Annual Change]</local-name>
              <parent-name>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</parent-name>
              <remote-alias>Annual Change</remote-alias>
              <ordinal>29</ordinal>
              <family>hong-kong-inflation-rate-cpi.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F4]</local-name>
              <parent-name>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</parent-name>
              <remote-alias>F4</remote-alias>
              <ordinal>30</ordinal>
              <family>hong-kong-inflation-rate-cpi.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CCYY:ok]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>2021</bucket>
            </map>
            <map to='#a64122'>
              <bucket>2020</bucket>
            </map>
            <map to='#ae4522'>
              <bucket>2019</bucket>
            </map>
            <map to='#b64923'>
              <bucket>2018</bucket>
            </map>
            <map to='#be4e23'>
              <bucket>2017</bucket>
            </map>
            <map to='#c65222'>
              <bucket>2016</bucket>
            </map>
            <map to='#cd5622'>
              <bucket>2015</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>2014</bucket>
            </map>
            <map to='#dd6020'>
              <bucket>2013</bucket>
            </map>
            <map to='#e46520'>
              <bucket>2012</bucket>
            </map>
            <map to='#ea6b20'>
              <bucket>2011</bucket>
            </map>
            <map to='#ee7322'>
              <bucket>2010</bucket>
            </map>
            <map to='#f07c27'>
              <bucket>2009</bucket>
            </map>
            <map to='#f2852c'>
              <bucket>2008</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>2007</bucket>
            </map>
            <map to='#f59738'>
              <bucket>2006</bucket>
            </map>
            <map to='#f5a040'>
              <bucket>2005</bucket>
            </map>
            <map to='#f5a94a'>
              <bucket>2004</bucket>
            </map>
            <map to='#f7b059'>
              <bucket>2003</bucket>
            </map>
            <map to='#fab768'>
              <bucket>2002</bucket>
            </map>
            <map to='#fcbe76'>
              <bucket>2001</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>2000</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;中国&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='CCYY' />
        <field-sort-custom-order field='GDP' />
        <field-sort-custom-order field='Calculation_1476899228237905922' />
        <field-sort-custom-order field='Year (日期)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='GDP Per Capita.csv' id='GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C'>
            <properties context=''>
              <relation connection='textscan.0ny2pz418dw64h1eyh8au0qwbff4' name='GDP Per Capita.csv' table='[D:\Course\COMP4462\final_proj\data\GDP Per Capita#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='integer' name='label' ordinal='0' />
                  <column datatype='real' name='GDP Per Capita (USD)' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C' table='[Extract].[GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C]' type='table' />
            </properties>
          </object>
          <object caption='Literacy' id='Sheet1_42DE99CD7F434714B4CEC1206C3A554B'>
            <properties context=''>
              <relation connection='excel-direct.191nl7705q57801ba52ca0gpcnt5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='real' name='adult literacy rate%' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Sheet1_42DE99CD7F434714B4CEC1206C3A554B' table='[Extract].[Sheet1_42DE99CD7F434714B4CEC1206C3A554B]' type='table' />
            </properties>
          </object>
          <object caption='Urban Population Ratio' id='Sheet1_77312F442B7046F1B6A5ED9343B5A7D3'>
            <properties context=''>
              <relation connection='excel-direct.1i244pw1bqrudf1bnaxvz0djau48' name='Sheet11' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D65:no:A1:D65:1' header='yes' lost='0' outcome='1' processed='251'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='real' name='% of Total' ordinal='2' />
                  <column datatype='real' name='Change' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Sheet1_77312F442B7046F1B6A5ED9343B5A7D3' table='[Extract].[Sheet1_77312F442B7046F1B6A5ED9343B5A7D3]' type='table' />
            </properties>
          </object>
          <object caption='Life Exp' id='Sheet1_FEC26578D692450BB09D390B2967B4C1'>
            <properties context=''>
              <relation connection='excel-direct.146o9fc1vtxufk184nktq1eg5k54' name='Sheet12' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C76:no:A1:C76:1' header='yes' lost='0' outcome='1' processed='222'>
                  <column datatype='integer' name='Year' ordinal='0' />
                  <column datatype='real' name='Life Expectancy' ordinal='1' />
                  <column datatype='real' name='Growth Rate' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Sheet1_FEC26578D692450BB09D390B2967B4C1' table='[Extract].[Sheet1_FEC26578D692450BB09D390B2967B4C1]' type='table' />
            </properties>
          </object>
          <object caption='df_LF.csv' id='df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D'>
            <properties context=''>
              <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_LF.csv' table='[D:\Course\COMP4462\final_proj\data\df_LF#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='STAT_VAR' ordinal='0' />
                  <column datatype='integer' name='CCYY' ordinal='1' />
                  <column datatype='real' name='OBS_VALUE' ordinal='2' />
                  <column datatype='real' name='employment_rate' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D' table='[Extract].[df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D]' type='table' />
            </properties>
          </object>
          <object caption='df_age_to_group.csv' id='df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72'>
            <properties context=''>
              <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_age_to_group.csv' table='[D:\Course\COMP4462\final_proj\data\df_age_to_group#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='SEX' ordinal='0' />
                  <column datatype='integer' name='AGE' ordinal='1' />
                  <column datatype='integer' name='CCYY' ordinal='2' />
                  <column datatype='real' name='OBS_VALUE' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72' table='[Extract].[df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72]' type='table' />
            </properties>
          </object>
          <object caption='df_gdp.csv' id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7'>
            <properties context=''>
              <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_gdp.csv' table='[D:\Course\COMP4462\final_proj\data\df_gdp#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='integer' date-parse-format='yyyy' name='CCYY' ordinal='0' />
                  <column datatype='integer' name='GDP' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' table='[Extract].[df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7]' type='table' />
            </properties>
          </object>
          <object caption='df_male_ratio.csv' id='df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5'>
            <properties context=''>
              <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_male_ratio.csv' table='[D:\Course\COMP4462\final_proj\data\df_male_ratio#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='SEX' ordinal='0' />
                  <column datatype='string' name='AGE' ordinal='1' />
                  <column datatype='integer' name='CCYY' ordinal='2' />
                  <column datatype='real' name='OBS_VALUE' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5' table='[Extract].[df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5]' type='table' />
            </properties>
          </object>
          <object caption='df_population.csv' id='df_population.csv_076F6A62184E4758B75F7CC2F5914EFE'>
            <properties context=''>
              <relation connection='textscan.06klbd10upslbx12def1v0m3hszi' name='df_population.csv' table='[D:\Course\COMP4462\final_proj\data\df_population#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='integer' name='CCYY' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df_population.csv_076F6A62184E4758B75F7CC2F5914EFE' table='[Extract].[df_population.csv_076F6A62184E4758B75F7CC2F5914EFE]' type='table' />
            </properties>
          </object>
          <object caption='hong-kong-inflation-rate-cpi.csv' id='hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A'>
            <properties context=''>
              <relation connection='textscan.1fm8tut01hi5ff13qu7mv12c8w3k' name='hong-kong-inflation-rate-cpi.csv' table='[D:\Course\COMP4462\final_proj\data\hong-kong-inflation-rate-cpi#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='integer' name='date' ordinal='0' />
                  <column datatype='real' name='Inflation Rate (%)' ordinal='1' />
                  <column datatype='real' name='Annual Change' ordinal='2' />
                  <column datatype='string' name='F4' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A' table='[Extract].[hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[label]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='GDP Per Capita.csv_FCA7206119F6458E827BD200A3A6B00C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[year]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='Sheet1_42DE99CD7F434714B4CEC1206C3A554B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[Year]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='Sheet1_77312F442B7046F1B6A5ED9343B5A7D3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[Year (Sheet12)]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='Sheet1_FEC26578D692450BB09D390B2967B4C1' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[CCYY (df_LF.csv)]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='df_LF.csv_5462811FB65F4C5CAB09E76B6216B59D' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[CCYY (df_age_to_group.csv)]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='df_age_to_group.csv_677BFC20EBCE4281BAE586C29CCA5F72' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[CCYY (df_male_ratio.csv)]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='df_male_ratio.csv_2D08FF70C1564856A2349F92D375F8D5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[CCYY (df_population.csv)]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='df_population.csv_076F6A62184E4758B75F7CC2F5914EFE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[CCYY]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='df_gdp.csv_E1F75B20E0674355B0124BCA6BFABDE7' />
            <second-end-point object-id='hong-kong-inflation-rate-cpi.csv_3BCA4F9DBFDB4E80B355A5148FB4B82A' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Indicators over time - Economy'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_gdp+' name='federated.1l279qm06t08nm1ba8hm50wm7bbe' />
          </datasources>
          <datasource-dependencies datasource='federated.1l279qm06t08nm1ba8hm50wm7bbe'>
            <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[CCYY]' role='dimension' type='ordinal' />
            <column datatype='real' name='[GDP Per Capita (USD)]' role='measure' type='quantitative' />
            <column caption='GDP (Million HK$)' datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation Rate (%)]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year (日期)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE( [CCYY], 1, 1 )' />
            </column>
            <column-instance column='[GDP Per Capita (USD)]' derivation='Sum' name='[sum:GDP Per Capita (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation Rate (%)]' derivation='Sum' name='[sum:Inflation Rate (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (日期)]' derivation='Year-Trunc' name='[tyr:Year (日期):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (日期)]' derivation='Year' name='[yr:Year (日期):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Year (日期):ok]' />
              <groupfilter function='member' level='[yr:Year (日期):ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='820' />
                <format attr='maxwidth' value='820' />
                <format attr='minheight' value='359' />
                <format attr='maxheight' value='359' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP Per Capita (USD):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP Per Capita (USD):qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]))</rows>
        <cols>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[tyr:Year (日期):qk]</cols>
      </table>
      <simple-id uuid='{52F71F68-B67B-4FAC-A2DC-61D4F1332661}' />
    </worksheet>
    <worksheet name='Indicators over time - Population Related'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_gdp+' name='federated.1l279qm06t08nm1ba8hm50wm7bbe' />
          </datasources>
          <datasource-dependencies datasource='federated.1l279qm06t08nm1ba8hm50wm7bbe'>
            <column caption='Urban Population(% of Total)' datatype='real' name='[% of Total]' role='measure' type='quantitative' />
            <column caption='AGE (df age to group.csv)' datatype='integer' name='[AGE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[CCYY]' role='dimension' type='ordinal' />
            <column caption='Avg Age' datatype='real' name='[Calculation_481322235096121344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[AGE (df_age_to_group.csv)]*[OBS_VALUE (df_age_to_group.csv)]/100' />
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column caption='OBS VALUE (df age to group.csv)' datatype='real' name='[OBS_VALUE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column caption='Male Ratio (%)' datatype='real' name='[OBS_VALUE (df_male_ratio.csv)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year (日期)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE( [CCYY], 1, 1 )' />
            </column>
            <column caption='Adult Literacy Rate%' datatype='real' name='[adult literacy rate%]' role='measure' type='quantitative' />
            <column caption='Employment Rate' datatype='real' name='[employment_rate]' role='measure' type='quantitative' />
            <column-instance column='[CCYY]' derivation='None' name='[none:CCYY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[% of Total]' derivation='Sum' name='[sum:% of Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_481322235096121344]' derivation='Sum' name='[sum:Calculation_481322235096121344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OBS_VALUE (df_male_ratio.csv)]' derivation='Sum' name='[sum:OBS_VALUE (df_male_ratio.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adult literacy rate%]' derivation='Sum' name='[sum:adult literacy rate%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[employment_rate]' derivation='Sum' name='[sum:employment_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (日期)]' derivation='Year-Trunc' name='[tyr:Year (日期):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CCYY:ok]' />
              <groupfilter function='member' level='[none:CCYY:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk]' scope='rows' value='Urban Population (%)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='748' />
                <format attr='maxwidth' value='748' />
                <format attr='minheight' value='153' />
                <format attr='maxheight' value='153' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk]))))))</rows>
        <cols>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[tyr:Year (日期):qk]</cols>
      </table>
      <simple-id uuid='{A15ECEE6-564A-4FE5-8974-F0AF436A2B5D}' />
    </worksheet>
    <worksheet name='Linechart'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_gdp+' name='federated.1l279qm06t08nm1ba8hm50wm7bbe' />
          </datasources>
          <datasource-dependencies datasource='federated.1l279qm06t08nm1ba8hm50wm7bbe'>
            <column caption='Urban Population(% of Total)' datatype='real' name='[% of Total]' role='measure' type='quantitative' />
            <column caption='AGE (df age to group.csv)' datatype='integer' name='[AGE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[CCYY]' role='dimension' type='ordinal' />
            <column caption='Avg Age' datatype='real' name='[Calculation_481322235096121344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[AGE (df_age_to_group.csv)]*[OBS_VALUE (df_age_to_group.csv)]/100' />
            </column>
            <column caption='GDP (Million HK$)' datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation Rate (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column caption='OBS VALUE (df age to group.csv)' datatype='real' name='[OBS_VALUE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column caption='Male Ratio (%)' datatype='real' name='[OBS_VALUE (df_male_ratio.csv)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year (日期)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='MAKEDATE( [CCYY], 1, 1 )' />
            </column>
            <column caption='Adult Literacy Rate%' datatype='real' name='[adult literacy rate%]' role='measure' type='quantitative' />
            <column caption='Employment Rate' datatype='real' name='[employment_rate]' role='measure' type='quantitative' />
            <column-instance column='[CCYY]' derivation='None' name='[none:CCYY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[% of Total]' derivation='Sum' name='[sum:% of Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_481322235096121344]' derivation='Sum' name='[sum:Calculation_481322235096121344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation Rate (%)]' derivation='Sum' name='[sum:Inflation Rate (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OBS_VALUE (df_male_ratio.csv)]' derivation='Sum' name='[sum:OBS_VALUE (df_male_ratio.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adult literacy rate%]' derivation='Sum' name='[sum:adult literacy rate%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[employment_rate]' derivation='Sum' name='[sum:employment_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (日期)]' derivation='Year' name='[yr:Year (日期):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CCYY:ok]' />
              <groupfilter function='member' level='[none:CCYY:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk]' scope='rows' value='Urban Population (%)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]' value='49' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' value='Inflation Rate (%)'>
              <formatted-text>
                <run>Inflation Rate (%)</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' value='GDP (Million HK$)'>
              <formatted-text>
                <run>GDP (Million HK$)</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' />
              <size column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk])))))))</rows>
        <cols>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]</cols>
      </table>
      <simple-id uuid='{1EC63A36-2E11-4159-A8BB-2DCEA32DE26B}' />
    </worksheet>
    <worksheet name='Parallel'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_gdp+' name='federated.1l279qm06t08nm1ba8hm50wm7bbe' />
          </datasources>
          <datasource-dependencies datasource='federated.1l279qm06t08nm1ba8hm50wm7bbe'>
            <column caption='AGE (df age to group.csv)' datatype='integer' name='[AGE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[CCYY]' role='dimension' type='ordinal' />
            <column caption='GDP - Norm' datatype='real' name='[Calculation_1476899228237905922]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([GDP]) - WINDOW_MIN(SUM([GDP])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([GDP])) - WINDOW_MIN(SUM([GDP])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='GDP Per Capita - Norm' datatype='real' name='[Calculation_1476899228238475267]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([GDP Per Capita (USD)]) - WINDOW_MIN(SUM([GDP Per Capita (USD)])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([GDP Per Capita (USD)])) - WINDOW_MIN(SUM([GDP Per Capita (USD)])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Inflation Rate - Norm' datatype='real' name='[Calculation_1476899228238782468]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Inflation Rate (%)]) - WINDOW_MIN(SUM([Inflation Rate (%)])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Inflation Rate (%)])) - WINDOW_MIN(SUM([Inflation Rate (%)])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Population - Norm' datatype='real' name='[Calculation_1476899228239167493]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Population]) - WINDOW_MIN(SUM([Population])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Population])) - WINDOW_MIN(SUM([Population])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Employment Rate - Norm' datatype='real' name='[Calculation_1476899228239364102]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([employment_rate]) - WINDOW_MIN(SUM([employment_rate])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([employment_rate])) - WINDOW_MIN(SUM([employment_rate])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Average Age - Norm' datatype='real' name='[Calculation_1476899228239724551]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Calculation_481322235096121344]) - WINDOW_MIN(SUM([Calculation_481322235096121344])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Calculation_481322235096121344])) - WINDOW_MIN(SUM([Calculation_481322235096121344])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Adult Literacy Rate - Norm' datatype='real' name='[Calculation_1476899228239966216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([adult literacy rate%]) - WINDOW_MIN(SUM([adult literacy rate%])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([adult literacy rate%])) - WINDOW_MIN(SUM([adult literacy rate%])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Life Expectancy - Norm' datatype='real' name='[Calculation_1476899228240281610]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Life Expectancy]) - WINDOW_MIN(SUM([Life Expectancy])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([Life Expectancy])) - WINDOW_MIN(SUM([Life Expectancy])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Male Ratio - Norm' datatype='real' name='[Calculation_1476899228240486411]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([OBS_VALUE (df_male_ratio.csv)]) - WINDOW_MIN(SUM([OBS_VALUE (df_male_ratio.csv)])))&#13;&#10;/&#13;&#10;(WINDOW_MAX(SUM([OBS_VALUE (df_male_ratio.csv)])) - WINDOW_MIN(SUM([OBS_VALUE (df_male_ratio.csv)])))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Urban Population Rate - Norm' datatype='real' name='[Calculation_1476899228240711692]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='Avg Age' datatype='real' name='[Calculation_481322235096121344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[AGE (df_age_to_group.csv)]*[OBS_VALUE (df_age_to_group.csv)]/100' />
            </column>
            <column datatype='real' name='[GDP Per Capita (USD)]' role='measure' type='quantitative' />
            <column caption='GDP (Million HK$)' datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation Rate (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column caption='OBS VALUE (df age to group.csv)' datatype='real' name='[OBS_VALUE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column caption='Male Ratio (%)' datatype='real' name='[OBS_VALUE (df_male_ratio.csv)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Adult Literacy Rate%' datatype='real' name='[adult literacy rate%]' role='measure' type='quantitative' />
            <column caption='Employment Rate' datatype='real' name='[employment_rate]' role='measure' type='quantitative' />
            <column-instance column='[CCYY]' derivation='None' name='[none:CCYY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1476899228237905922]' derivation='User' name='[usr:Calculation_1476899228237905922:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228238475267]' derivation='User' name='[usr:Calculation_1476899228238475267:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228238782468]' derivation='User' name='[usr:Calculation_1476899228238782468:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228239167493]' derivation='User' name='[usr:Calculation_1476899228239167493:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228239364102]' derivation='User' name='[usr:Calculation_1476899228239364102:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228239724551]' derivation='User' name='[usr:Calculation_1476899228239724551:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228239966216]' derivation='User' name='[usr:Calculation_1476899228239966216:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228240281610]' derivation='User' name='[usr:Calculation_1476899228240281610:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228240486411]' derivation='User' name='[usr:Calculation_1476899228240486411:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[CCYY]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1476899228240711692]' derivation='User' name='[usr:Calculation_1476899228240711692:qk:2]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228237905922:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228238475267:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228238782468:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239167493:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239364102:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239724551:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239966216:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228240281610:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228240486411:qk:2]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228237905922:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228238475267:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228238782468:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239167493:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239364102:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239724551:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228239966216:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228240281610:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228240486411:qk:2]&quot;</bucket>
              <bucket>&quot;[federated.1l279qm06t08nm1ba8hm50wm7bbe].[usr:Calculation_1476899228240711692:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CCYY:ok]' />
              <groupfilter function='member' level='[none:CCYY:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[:Measure Names]</column>
            <column>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[Multiple Values]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='0.10000000000000001' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[Multiple Values]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[:Measure Names]' value='696' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[Multiple Values]</rows>
        <cols>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{516C399F-E9A3-4803-AC4E-707121713AFA}' />
    </worksheet>
    <worksheet name='Relations of Indicators - Economy'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_gdp+' name='federated.1l279qm06t08nm1ba8hm50wm7bbe' />
          </datasources>
          <datasource-dependencies datasource='federated.1l279qm06t08nm1ba8hm50wm7bbe'>
            <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[CCYY]' role='dimension' type='ordinal' />
            <column datatype='real' name='[GDP Per Capita (USD)]' role='measure' type='quantitative' />
            <column caption='GDP (Million HK$)' datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation Rate (%)]' role='measure' type='quantitative' />
            <column-instance column='[CCYY]' derivation='None' name='[none:CCYY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GDP Per Capita (USD)]' derivation='Sum' name='[sum:GDP Per Capita (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation Rate (%)]' derivation='Sum' name='[sum:Inflation Rate (%):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CCYY:ok]' />
              <groupfilter function='member' level='[none:CCYY:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP Per Capita (USD):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP Per Capita (USD):qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]))</rows>
        <cols>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP Per Capita (USD):qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]))</cols>
      </table>
      <simple-id uuid='{F4895A34-CFA3-45C7-A2EA-50D9B49EA561}' />
    </worksheet>
    <worksheet name='Relations of Indicators - Population Related'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_gdp+' name='federated.1l279qm06t08nm1ba8hm50wm7bbe' />
          </datasources>
          <datasource-dependencies datasource='federated.1l279qm06t08nm1ba8hm50wm7bbe'>
            <column caption='Urban Population(% of Total)' datatype='real' name='[% of Total]' role='measure' type='quantitative' />
            <column caption='AGE (df age to group.csv)' datatype='integer' name='[AGE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[CCYY]' role='dimension' type='ordinal' />
            <column caption='Avg Age' datatype='real' name='[Calculation_481322235096121344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[AGE (df_age_to_group.csv)]*[OBS_VALUE (df_age_to_group.csv)]/100' />
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column caption='OBS VALUE (df age to group.csv)' datatype='real' name='[OBS_VALUE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column caption='Male Ratio (%)' datatype='real' name='[OBS_VALUE (df_male_ratio.csv)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Adult Literacy Rate%' datatype='real' name='[adult literacy rate%]' role='measure' type='quantitative' />
            <column caption='Employment Rate' datatype='real' name='[employment_rate]' role='measure' type='quantitative' />
            <column-instance column='[CCYY]' derivation='None' name='[none:CCYY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[% of Total]' derivation='Sum' name='[sum:% of Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_481322235096121344]' derivation='Sum' name='[sum:Calculation_481322235096121344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OBS_VALUE (df_male_ratio.csv)]' derivation='Sum' name='[sum:OBS_VALUE (df_male_ratio.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adult literacy rate%]' derivation='Sum' name='[sum:adult literacy rate%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[employment_rate]' derivation='Sum' name='[sum:employment_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CCYY:ok]' />
              <groupfilter function='member' level='[none:CCYY:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk]' scope='cols' value='Urban Population (%)' />
            <format attr='title' class='0' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk]' scope='cols' value='Average Age' />
            <format attr='height' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk]' value='76' />
            <format attr='height' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk]' value='76' />
            <format attr='height' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk]' value='76' />
            <format attr='height' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk]' value='76' />
            <format attr='height' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk]' value='76' />
            <format attr='height' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk]' value='76' />
            <format attr='height' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='164' />
                <format attr='maxwidth' value='164' />
                <format attr='minheight' value='161' />
                <format attr='maxheight' value='161' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk]))))))</rows>
        <cols>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk]))))))</cols>
      </table>
      <simple-id uuid='{12CADEAF-3CCD-4990-A02D-22D0FE9937EC}' />
    </worksheet>
    <worksheet name='Scatter Plot Matrix'>
      <table>
        <view>
          <datasources>
            <datasource caption='df_gdp+' name='federated.1l279qm06t08nm1ba8hm50wm7bbe' />
          </datasources>
          <datasource-dependencies datasource='federated.1l279qm06t08nm1ba8hm50wm7bbe'>
            <column caption='Urban Population(% of Total)' datatype='real' name='[% of Total]' role='measure' type='quantitative' />
            <column caption='AGE (df age to group.csv)' datatype='integer' name='[AGE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' datatype-customized='true' name='[CCYY]' role='dimension' type='ordinal' />
            <column caption='Avg Age' datatype='real' name='[Calculation_481322235096121344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[AGE (df_age_to_group.csv)]*[OBS_VALUE (df_age_to_group.csv)]/100' />
            </column>
            <column datatype='real' name='[GDP Per Capita (USD)]' role='measure' type='quantitative' />
            <column caption='GDP (Million HK$)' datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Inflation Rate (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column caption='OBS VALUE (df age to group.csv)' datatype='real' name='[OBS_VALUE (df_age_to_group.csv)]' role='measure' type='quantitative' />
            <column caption='Male Ratio (%)' datatype='real' name='[OBS_VALUE (df_male_ratio.csv)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='Adult Literacy Rate%' datatype='real' name='[adult literacy rate%]' role='measure' type='quantitative' />
            <column caption='Employment Rate' datatype='real' name='[employment_rate]' role='measure' type='quantitative' />
            <column-instance column='[CCYY]' derivation='None' name='[none:CCYY:ok]' pivot='key' type='ordinal' />
            <column-instance column='[% of Total]' derivation='Sum' name='[sum:% of Total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_481322235096121344]' derivation='Sum' name='[sum:Calculation_481322235096121344:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP Per Capita (USD)]' derivation='Sum' name='[sum:GDP Per Capita (USD):qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Inflation Rate (%)]' derivation='Sum' name='[sum:Inflation Rate (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OBS_VALUE (df_male_ratio.csv)]' derivation='Sum' name='[sum:OBS_VALUE (df_male_ratio.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[adult literacy rate%]' derivation='Sum' name='[sum:adult literacy rate%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[employment_rate]' derivation='Sum' name='[sum:employment_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CCYY:ok]' />
              <groupfilter function='member' level='[none:CCYY:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk]' scope='cols' value='Urban Population (%)' />
            <format attr='title' class='0' field='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk]' scope='cols' value='Average Age' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP Per Capita (USD):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP Per Capita (USD):qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]))</rows>
        <cols>([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Population:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:employment_rate:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Calculation_481322235096121344:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:adult literacy rate%:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:% of Total:qk] + ([federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:OBS_VALUE (df_male_ratio.csv):qk] + [federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Life Expectancy:qk]))))))</cols>
      </table>
      <simple-id uuid='{CBFBAA3E-9565-4F3D-B6D3-AACB2DCC58EF}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Scatter Plot Matrix'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</field>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{375866D3-E0CA-412A-A25B-9956EB03B6E5}' />
    </window>
    <window class='worksheet' name='Relations of Indicators - Economy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='9' param='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</field>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91030E44-4177-4DC5-B6E5-C086CD23349D}' />
    </window>
    <window class='worksheet' maximized='true' name='Relations of Indicators - Population Related'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</field>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1311BAF-DF7E-4930-9AFB-8A54BEE1C358}' />
    </window>
    <window class='worksheet' name='Indicators over time - Economy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0546388-04E1-4785-8637-3212FC394E32}' />
    </window>
    <window class='worksheet' name='Indicators over time - Population Related'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[:Measure Names]</field>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</field>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BFBA18C-1F0C-42CE-8951-742406DC7400}' />
    </window>
    <window class='worksheet' name='Linechart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:GDP:qk]' size='84' type='size' />
            <card pane-specification-id='1' param='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[sum:Inflation Rate (%):qk]' size='32' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</field>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:GDP:qk]</field>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[yr:Year (日期):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D549CBBF-4CE7-46C7-B2FF-301ECA362C69}' />
    </window>
    <window class='worksheet' name='Parallel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='178'>
            <card pane-specification-id='0' param='[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1l279qm06t08nm1ba8hm50wm7bbe].[none:CCYY:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94A5034C-A8E0-4482-8E6D-56566378C479}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Indicators over time - Economy' width='192'>
      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
      iutpOV1LW1gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Indicators over time - Population Related' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Linechart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Parallel' width='192'>
      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
      gf8DozQbb5tbHpsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Relations of Indicators - Economy' width='192'>
      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
      eAMYewAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Relations of Indicators - Population Related' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot Matrix' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXxdZbnvv2utPQ/ZmeemSZtOadOZ0okyU2YQEQQRGURR1KOec/Xe47ke
      7zl6lCOIRwXxqKiAgqiIzFOhUEqntE2TNGmbeZ53hj0Pa733j0Apx2bYOzvZ3WF/P59+Ps1O
      1np+717rWesdnud5JSGEIEmSjyhyvAUkSRJPdO//JxwO4/P54qklSZJZR3q/C6RpGuFwON56
      /o7h4WFSU1MjPi4cDqPT6Sb/w1PQNA1JkpAkacZtAaiqisvliqp9kRKtxunYifbaRWMrWk4e
      LcsyBoPhQ78UQqOvs43mtnaCmkJhUTHz5+WhRHiDTEugTvd3uqaCJEno9fqIjlFVFUmSkOXI
      eoZTsRVwjRD2ebFk5iDJMkIIJEmKun2REs33MRWEEPgG+5D1BkyOtA/Zmem2xaJN47pP0OPk
      6b/8FdWYRlnZElIkleoDb7Hj9TBXf/x6chzmaRn+KNFbVUHdM4+jBfykLypj1a1fgll8iMwU
      Qgjqnn4UZ30t/qEBll33abLXbom3rIgY1wGEJrjgmpvIdlgQQuD1uFi0dAVaYISRoDqbGhOe
      uj//BrtJYbS1nvbaveQuX03O+nPiLWva+Ab7GTxRS+HK1TQ8+SA1P/oGZXf/C/POvzre0qbM
      uO96oz2DgZqd7KxspuXwDn7y8K/50cOPoTOnkp1mm02NCY/iHiDk87Du/z6MJTWDxr/8Kt6S
      YoJiMBAYHqThyQcpufYODKVraH7qYfyDvfGWNmXGdQD/aD/Pvfwax+uq+cWjz1C+Zh2NVbvY
      uecgIVWbTY0Jj9FiYbDhGPt+9j0kownFYIy3pJhgTEll2XWfRg34adu/m+U33knQNYp/oCfe
      0qbMuA5gSsni5hs+TlPlHhZsuoLLNi0hp7CMczetQ68klw+mihACR9ECTH4ncvMBgv2dLL31
      q/GWFRPUYIC+Q++iM1uRmg5Q8293YMsvxFG6It7SpsyEc0iaOZt//e73sOhlQHDFxZsYmzVN
      /AHcbBEY7KFr9ysUfPKrZC4qo/ahf6W/thLHwrJ4S5s2Hbtfw5yeQd7KtTjWX0zf4d0o7n4k
      RYm3tCkzoQPI4RHu//73Of+SC9n9ynPMP/sKNsjJmz8SRCiIIezB/c5fMQx3jk3+zJXok/em
      ctXhfvqefRihapCaFW9VETFhXyYlez6fuPZiHvqvn7L1ypvYUDZ/tnTNGdzHDmI06vH3ttHz
      zouYsgsovvhj8ZYVEwq2XIynrwtXQxWe1uMI7wiyFoy3rIiY0AF62xs5UtfMFVdeTkfDUQ4c
      qUXT5sjTa5bwnjhASmY6JZdeT0pWBkXnXYHeYo23rJigM5pYcfPd2OwW5m06l4yFi9AGO+Mt
      KyIm7AKlZeWxWDN98IHeEnGYwEcZLeAl2FCBKmSGDr4BfjcpS9fGW1ZsEQK9rOLtaAKhoWcO
      vQG8rhH6ujv50U8fpK+vj74BJ8nn/9QJdJxAGWrF4u/FZjNiySvCmFscb1kxRZLAIKtYwwNY
      1WH0SmLdIRO+AeYvWcX8hUt5dfcBtm/fPlua5gyBA8+iT81EX1hG8Pi72M77NLJ+5uN+ZhNJ
      kjDqNOSsEkTAizngjrekiJjwDXDo7Re4/8f/RV9HG/fffz/3/+L3hMKRL4KFA16O7H+HIw1j
      /cPBziZ2v7uHdw8cQQCvP/dn+twBANpq9/HGvtrIW3KGIYRG6OgOTA478lAzOosVy+L18ZYV
      e7Qwer2E0SAwGkAnJVaYzIRvgFVbtlO+6ZJTPpHQKZGPATQBC0oX0tgfADSONXWxcetWWg+/
      Q7dHkJJup725k+wV8+kd8qCTEz/QTu1tBk0lFAKEgiElBVNZYgWKTQVJp0dWZAIuD4QDGIyJ
      9Yab0AEURYcsT79PZzBZkMMeIACoCHQoEqQ5jHSNBpBNGShBJ+5hE6b0fALDQYQQqKqKqqqE
      QqGIbapq5E+iaPMBTmdLk2T085cjC5AkHYrFiirrUU9py3TaFynRfB9TQUgKuvxSFMWEMq8c
      rfPoyfbMdNti0aZJswkaKl7nsRf2YjUbwJ7H1z53CwbddGaCFBQpTFgI+oYCZOUbaeuCzBQz
      1Sc6WLq0lJHhjpOx8oqiRB3zPVv5AKezpaIih0YRzi4I+bB+7jfoTvmb91Oxp9O+6WqMBcET
      hzGkZxHuOoE4WIv59l+etDMbbZuxfID36Wxp5JyP3cHFqwqiNjI62MWxE02M+MI0mE2UL1vA
      /j17MaVks8Qs4UpNI39eJq2DLThsJjLSU6K2daYQPPQ0ik2HLnsl6NNQu2rRFS6Pt6yYE6p8
      AV12PrJZQu2uR+LMyyqciEkdICU9ld8+9hA1b2SCLYcv3f5J9LrInpApGfls2JT/oc82b/7g
      54ULFwKwZeMqAJYtKY7o/Gciou8weAaR03MJN+/BsObaeEuaEeT0HNSOPciWVCQpgNpVCQsS
      Z7A/6Z1cvvVKrj1/HY70bK649KKoBsEfNbThdkRgBHnhdkJtjUgGBTmrJN6yZgRd7gKEz4sa
      MKBbcgnC2xdvSRExqQMceu3P1I5YuHDzSh5+6OeEkqEQkxP2I4IB1IYdEBxEchQgmR3xVhVz
      hNBQe4+DpCFcLYTr30S2pMdbVkRM2gXSNBW9Xo+k0yMJjeRS8ORIqUVIBhnZZgfNhqbKCI8T
      yZYZb2kxRbj6UQc7UdIyEFoY4R5Bt/K6eMuKiEnfABsu/STzDYO88dYB7vrilyLu/38UCR97
      HvRp6Dd9FbloA0gCSW+a/MAEQ9KbkUID6M+6C8Omr4JOD9pcGQSrQSrrGsk0ayiWNAos0N7S
      xKLCTJRkTsCECHcv+qXn4t9xL5IkY9h8O5Jx7uVRS2Y7ctZ8/G//BNk+H938DQj/KJA/6bFn
      ChN2gSQJjGYr6env9ev0ltnQlNAIIUABtW0fit0IBgu6BefFW9aMoI12gcmIkuqAcDeYCpHT
      E2uwP74DaCq1+3eyY+iUcom2HFaWLUm+ASZEIFydGC/7EXiHCNX+EURixcdMFbWrAl3ppciZ
      y9D6ahAjrSAlVhd5fAfQmfjYJ29DOzV9T5KT06CTEfajGC1oBx5AlQ0gKaCfGwkwpyKEAM1P
      qPK/MeSuRtJZkXLWkGj1QsZ3gLCfp594hC7nKW8Aey7/cOfN6KcVCjGHERo0PAuBEUCgk2RU
      Ww6SMjuhDrOK34nWfQBT7ipUTx+SrCA7CuaQA+jN3HzHPbMoZQ4gNHB1IazZKEs+jtTwHJpu
      7s3+AGiuLqSwDwwpYMlG7a9FHu2It6yIGd8BQl5+/7fXWJ6r55Xd1WOfnQyGS6x+3qwhKWDN
      QeqrQjQ8C/5hlNx18VY1IwhXJxjsCL8Twj4UnR4hJ96bboIxgJnLz9vIqNvHjTe+V8NGMSTH
      ABMhSYic1UgDdRD0oqGgZM69ADgAOWc1omsfmqRD0jQwZyCVXDL5gWcY4zuAJPHO84/ywuEB
      1q8pJ81uBnM6hfm5yEknGBcpowxWfxYx0oaSXY5kmnshEACyLQdp/T1oA3VI1lwkx3wkxQCz
      kNsQSyZcB7jkhrspXXuco0ePM+L2Upg9PyZVIYI+N32Dw4BCbmEeI/19ODKy0MkSAa8LT0gm
      3ZGYMyeSJCE5isFRHG8pM4yEZM5EmZfYVa4n7MwbTBYys3PJSHcQ9jipPdH84WnRKGmrrcYt
      FBRFQQIqdr1Mc68LgPqqfeyrPDFtG0mSTIUJ3wCv/PFhnt/fztlnn8WqDedgNNuQY/AGGPb5
      CPd0oGQXkAtkFC1kpKsFkb0IL2bsBgUhxMl/mhb55Fo0x2mahizLER83HY3RHhuNrdm2M9M2
      Y3H+8TfIEBqrt15KRqnzvQ9UQqGxQCdNE8jTWA1ev/UChNA4fmAn7ak5IBmx6MJ0tXeQWTCP
      ro7h9zR84ASREs1x73+hkaZERmtrOu2LlHjYmWmbsTj/uA7g7m1id3U728/fjNU0lukfCvjY
      t+M57Is3Uz4/2tBelab6JjLz8nH7BZmGMUcqyHKwq7qdC7atoatjGEmSUBQFWZZRoqg2rGla
      VMdFkxMcja33L1607YuUaL+P6diZ6bbFok3jOoA9dyEbF3t58neP4AsGUYWE0WDkrPO2s6Jo
      OnHtCvMKc2loamHeig1kmmX0pYtwpFhYrziwGK2ULS2exvmTJJk6J7dJPVNxOp0fRKNGQCgU
      mrWqENHYEkIQDodxuVxRtS9SotE4XTvRXrtobEXLpFc64PPg9gWmZSRJkjOVCWeBGite5eGn
      92ATLrbc8CUuWlM8S7KSJJkdJnwDHDx0iI/f/iW++YUbeXP3gdnSlCTJrDHhGyAlxcGLT/43
      b0t+hga8/PDnfr5616eSecFJ5gyThEJ8jnU9HdQ3t3GJI5ulS0qTwXBJ5hQTb5FUf4Af/ux3
      eIOCun0v89BjzyWroiSZU0zoAHt27eKqT3+ei87fxk13fpn++j0Eo9gfIEmSM5VJCmNpvPTU
      I+y3ja0Etw+rc2aHzyRJYBIHuOb2f+RK9ZQnviTFZACshvzUHa0lNb+Ewuw0jh+tZv6S5Zh0
      MqMDnfR5dZQW5UzbTpIkkzHh3dx6ZDf7j3VxZNezfPs7/4+fPvKXGCQ9Cyr37yN/0XI6jh7G
      HRb0ttfR0OEEBE31dbS2907bSpIkU2HidYCKvShmO0G/n+vv+l8MtR8hGJquC4TxCyPpViOL
      Cq20D4awZBUTGGhDC7oI6x0Yk7OsSWaJCW+1RSVF7Nm9hw2X3kyR1MZoyIJOme7dKfN+SkEo
      pKHXy4CM3STT2NRO7rzCaZ4/SZKpM+HdvPL861iZNsp3/9+3+e1f3+GrX/tKDNYBZHIceg4e
      qaa2T6M4bWwYMi8/g5qGHrJTEzMVMkliEpdoUCE0vB4POqMZo143FtWnUwgEwxgNOoJhDYN+
      zDGS0aCxIRkNenom3R9gJpAkGavNfvLn9xthfG+LTYM+OQhIMjucdIBQKITL5YqnltPidke3
      87iqqhFnC01nm9RoMsI0TcPn803+xzEgGo3TtRPttYvGVrScdAC9Xj8rr+JomMtdIEVR5mwX
      CKK7dtHaioa4dIE+agRco9T+6RF8zgEWX3UjmUvK4y0pZgw113Psr4+jt1hZ8cnPoljtkx90
      BpHsbM8CVY8+iMlqIb+snKrf/YzA6HC8JcWEkNfNkUd/xvIbbiejZCEVD3wL1T87XbpYkXSA
      WcDdUEXXC4/T9uIfCNYfYuh4VbwlxYSAaxSD1c5IbQUdz/2OocO7OPSdu9ASqDxi0gFmAYMU
      xh8WWFeegzCYaHr61/GWFBOsWbkYLFaO/upeRFYxpbd9A99ADyP11fGWNmUmHQM0HHiVB3/3
      NKrJzpDfwq9//K/J8ugRYs/Jx9dcw/AbT6BXjMiGubFngKaG0elkRMCLWrcLX8iJ3mjEWlAc
      b2lTZtI7ue5oNVfc8EmuuunLLMxIhkNHSmCwl6Fjh7GVbUQyWtE8Q6QtXx9vWTGha88bGKw2
      spaVoxrsDLW2YMvNw+A4M2cTT8ekDrBx2yWk5xQzcPAvOOatTKZERohQw0haGEd2JuWf/z+Y
      s/KR9MZ4y4oJajCAzmjCnJZJ8XnbyVhajmJIrLZN6gAd3V2kpGZx0+e+xqJcU0yqQ3+UCA33
      YU9NoX/3i5z46TfQpedSfNE18ZYVEwq2XMRoRwujxw7R/cqThNrrMFoTK5ZrwjHA0QM7efz3
      T2Atrmd+upGDJzq45NIrZ0vbnGDk0JtYs3JIXbwCf28HjnXnY7A7ZqVQ7UyjN1spv+WL1NXv
      wrH2YoQaxt16LN6yImJCByhcWMa5287BtmAjJVkWPvaJ7GRJlAjxNdcgO7JJ3XQlXX+4F/ui
      lfGWFFNkRUGRwbbqXFTPCO7GxJkBgkk2yXt99yEWFRXw2q6XOQxgy+Urd940LScIBzxUHW9h
      7crleEf6qa1vJb94MXmZJnq73eTmptHZ1k5O0Tx0MdiLIN7orTZCnbV0/WYvSko2psLSeEuK
      KbLRjCmrgIE//whJb8A8b1G8JUXEhBtlX3rhNsxGAwvLNxEIC2w22/QGwUJQX1dLZ7+LNWIp
      FYePsnHrFva/u4fMLWvo7OjHIIbo9cgUzIGbP+xyIof96DILwTiEJX8++pTEmSGZCpKsYDAb
      kbKLkBUdynul9BOFCTbJk7FaLLRVvc1Df3ydDLsBU8Eq7rnlSqK9NV2DHYTMOaSZ/QhVQ2cy
      YdDpcViMeEJhetrqcbrTOP/czQghUFUVVVUJRbGyqKpqxMdMJxr0dAR62tB6GzAVlaGklxDw
      eD/Ulum0L1Ki+T6mQtg9Am4n1sw8EBr+oe6T7ZnptsWiTZMuhJ2oreaiG+/mwvJcvvWt/0Mg
      dDkmvRzFZnkqe97Zhy1vPi0tLeTPL0W850phoaGXZHKLFqKoAzjdAbJTTOh0OhRFiTrib7ai
      Qcez5W2pRDZa0GcX4T22H9uaC07+3fuD4Om0LxYap4tsNCKFvOjSclF9bpShnpN2ZqNtMx4N
      mpqexuOPPcihLAeDA07+64H7ueT621i7MDtCUwqXXHs9AFrIz4LCXLy9zezdv4+wsGAxKIDM
      ynXr2LV7Pylbz8GkS+xukDbYjjkjC4NBRyjkwpA1L96SYo8kodeBwWJCSGG0BJsjmdQB1l54
      PebsJbgDYc696HLWrVqGEsUT8lS2bNkKksTydZsQQrzX7YC16xcjSRLbzk3srTffR+2oQe1v
      JRD0ghrEtGBuzQABoIaQ0AhUv4EWDiEb5tA6AMCe537HW3X9mLOLaDnRwtpVy6e9V/D7x//P
      /vb7/43FXsTxRvO5wNmG/bIvIEb68B/diWyfztZSZyaS3ohOCmO58E600X58la/GW1JETOoA
      fn+Q1ZvPwTUUok2rQtUE+lNmglzOXmqO1jHs9pGSns2K8nIclsSaCZgJ1P4WjGu2ow4PoI70
      o88sRDYl1tNxKohQAF3OAoIdJ5B0BhSbI96SImJSB9h6xU0MBxU6aveRd8NnMJ7sl6vsfvk5
      jvd5WLFyNSvm2+nrbOYvf3iU0tVbOGf9sqhni+YCSlYxauMeZJMFXWo++lWXxFvSjCBJILm7
      kVQ3SuFKWHBWvCVFxISd+cqdz1HZ6Scnw8G6LefRULWfD4pDCxav3canPnE1ZuGju2+QkhVn
      cfudd7CsKGvmlZ/hhKpfRNb5EIFehLsXJS033pJmBP9bv0JfUoYUdhI++jdMZ10db0kRMXFt
      0KYTeN+bxhWSzPH6Y6ja+zEsOjIcen76n9+nqrmXkb4W/vP799Lv0cjKzvxIP/0B1IZXkI0S
      skGC0UaEZzDekmKOEAKt7xhq2y5kuxUlLRW1ZU+8ZUXEhF2grRdezH2/+DkdVUsZ7mliwZqL
      P5QM4+w+Tii1nE9ddwUABlc3e2vauHrjgplVfYajufvQBhvBuhCJEIRrUYrm3gyQcA8gXB1I
      ejtYStD634bh1njLiogJHSBj/kq+8y/FNLe2Y3Fcwry8TE6doBFC0H50H/ff3wXAYHsTG+dd
      PKOCEwHh7kcE3OjyLWjuESRHHrJlboVAAKDokQxmJOFHNoQRVgdSgg30Jx0EB4MhihYswWL8
      +z/NLF7Hj3+2CgChqWhCwmBMzgAhSygZ2agd+5EMegzn/jOSOSXeqmKObEnFsOYqQpV/QO3a
      j2y2oyy7PN6yImLSFa36A6/y59cPIYQ4+e99Qq5+Hv/Tc6B6ePD+e/mPH9xHn2dmYk4SBSHE
      WP8/dzHKgjUoJZuRZinUYbYRahBtsBqldCO6kvXoFl8CYX+8ZUXEpA6gmB3sffZX/OCH93Hf
      Lx4nrH7gACMDLQwOCWrffh79ovO5bGUO+6oTqw8Yc9xd6PBizFqIacM9CFcbclpxvFXNCGrb
      bmRZYHTkYUgvQIw0IaXkx1tWREzaBVpSvpa1K0+QtngN2vAQ8imLYKl5y1hR3E2jx8aN28+i
      ekcHy0vzZlTwGY2mQv3fUF3dCKkbxdWNnJKPlFoUb2UxR2gqDNaiWNMJuzogHMRQtJ6wMbG6
      epO+Ad56/o+kl1+MRRFUVe3/0C6RfvcgDXX1NDU28OgvH2JQn0dxZmINgmKKJIHOhJS5DMk2
      D0mnR8leiqSbG2VQTkU4TyC8PUg641ieuCyDFoy3rIiZ9A1QumQZv37hOeTQMDpHCfpTdoix
      phdy6113je0dLDSe+91PeKe2jPNXzM1Fn0mRZDRJh+x3IhkdaF4vmDPirWpG0EZaQAiE0YFe
      1kHYj8hMvJqnEzqApgYJ6tO5aNtmFpSWkpuTg04+dYlrLHZeAELT0DQxY4kXiYKUu45wdwW4
      e8FgQ198YbwlzQhydjmh1p0IZz2SzoSy4lakrOUQTqzrP6EDHHz1KXY0C4qkTjqDNj4978MD
      HO9IN3966gWCjM1+OEo2sW3F+IMgn2uI+sZmVNnE8rKlBEZ7OdbYQW5RKYU5Fro7XeTnp9PW
      3Ep+SXFC5gRLmWXoNnwNbaQFJXsVkik13pJmBNlegH7DV9EGjyGnL0a25wMSMIccoLG1nQ2b
      b6Lc2MYPnq/iqo2LcKTY3gtXDlDf6OSmOz6L2fD+aQQBr4tDx9tYs2bF34VDeP0BSpeV4+s5
      Rm1LP6OdJ9i0dQv7332XnMw1dHcNYtCcOEMmihLw5of3QrxTS5BTS+ItZYaRkG15yLbEnvSY
      0AEWLlnO3t0vcUJSydOFefLZ17jz5mvfC4c2kGYN8+gvf445LQurUY/PPcSIT+Gya6497fky
      snLwjgxQ0zTIqg2l1A4Y0Ss6HOa5mRM8leMSPSd4IjsJnxN81vlXc9b54/1WorhsHZ9btpYR
      Zz8jbj8paRmkpYw/CzTa186h+h7O3nIOJkU7mRMcEhp6eSwnWC+c9I/6yEu1JHxO8ETMlZzg
      iewkQk7whFdaCIFreJCBodFxK5lJkkRqRjbz5xdNePMDHK06gqJI1Bw5zIA7SLpRsGffXnzY
      sOgVZFlhxdq1NFYdwh9O/MppSc58Jtwm9dju53jk5WrShJPyqz7PlWfPftGj5DapsSG5Terp
      mTghpuYo1992N/94903s3n94WoaSJDkTmXAMkJ2dw4tP/II3pSCB0SD3PuTna5+7JblBRpI5
      w4QOcP61t3He1Sqjo6MYzDZMBt2cqNiQJMn7TOgAXmcb9z/wMGn5xQz3tLLyok9y9TlzL7Mp
      yUeXCR1g10vPsOaqO7nq7FK0kJdvfuvfuHTzCozJLlCSOcKEDjDsGmXwWCUvDp4AYNDjR9OS
      05NJ5g4TOsBF195KZ98Hmzr/wz33JJ/+SeYUEzrAQEsdTtNijF3v8vTbR3HklrJ8aWlyc+Ek
      c4YJ7+Xq6iOYbCnojCZuued/4x+sJ3RKQkySJInOhA5QtqSUna+/Qfk5V5PuqcOjpSb3CEsy
      p5jYAc65hgsWm7j/3u/zzNvH+Ob/+of/kRAzPdSgm8rDhxn2BoEwQ04XAIN9fYTnwC6KSc58
      JhwDSLKOsy+8mrMvjH29RyE0dr+zj/VbxvYI23LuWpoau1girNR3ujk7K1lfNMnMM2lO8Ewh
      NBWdxYrFaCLdbsITVBnsbafCa2LT1i3JFecks0KcO/RjN7kQAlmClNQMzIqGLxCOr6wkHxni
      5gCSrMMkgtQ3NjAaUrAaFPRGC2vXrqTq0EFCanIMkGTmiVsXSJIk1mzYyKBzmKKiEhRJYnl5
      CXqTgbPXrSSGY+0kScYlbg4AICl6Mk8Z7Jre22TZaLbES1KSjxgnHSAUCuFyueKp5bS43e6o
      jlNVFUVRIjpmOknxkdoSQqBpGj6fL6LjoiUajdO1E+21i8ZWtJx0AL1ef9r0tfdT9wSg18Un
      H2Aup0QqijJnUyIhumsXra1oGLcLJIRGR301z728E4PNhixg1O1ly0VXsK6sBDk5TTkp4c46
      fLufRMmch3nrLUiGuVcjFEB1duLb+Vskgxn9ts+APnHKQY7rAJ7eZiqahrnjC1/+YGdILcye
      na9QZ3OwfH7sGyk0bazOKBJygo+CNc8w3pd/hvXqbxBqPYJ3xy+xXvbleMuKOSLox/O3e7Fc
      8kWEbxT3M9/HcOt98ZY1ZcZ1AFvuQj526UIQGvt3vsyJLie2jAKu2n4Fyow8/QVvvvY8jswC
      7Bl5LC5OrDrz/xN1sB0lZyFK1nwkSwru2p3xljQjaL5RJIMFXcFShBpGev2/4y0pIiacBao9
      +A5ufRbt/cOsWLGCI0ePE1YFim4GHEDz4PUq5FpTKCrIif35ZxldwTJ8O3+L941fofY0YVx1
      abwlzQiyPRPJ6sDz0k8RAQ/ywg3xlhQRE9YFEppK87Eqjre04wvr2bz1HHLSbMzMC0AQCAQI
      +l0cONLAeds2oqkqQ0NDpKZGXmD2TJgFEqEAWnMFIa8XXclqdI6svzvO5XJF1b5ImdFZIDWE
      v+J5JLMdXdl5KLqx5+rw8PCMti2ms0Cno+PEEXbs2gc6M0WFuRyqOsr2bRtmpAsU8nsY8YZJ
      t9tQJA0kKaFLI4pwgHDjG/gOv87Qwb1IKblk3fhNbCu2jP1+jpRGFEJjZMcv8b71a0KqAduV
      PjK2XQfMgdKIHZ1dLF29gQWZevJWbOPs8tIZ2wBbMRjxOrs5UnOc8tVr4h2kNG0Cu36O79he
      Qp2NZCwrxpydz9BLv4q3rJij9TehVf0Jx8WfI2PVanyv/TTekiJi3DdA0DPK0rO20dPWjG7V
      +ZQWWJCwoAa9DAcg1R7b1VpZ0VO8aBnFMT1r/NAGm1DVLAK9vRj0qeiMVnDMvb2Cte4agoPD
      aLUVEBrFqMzOwl6sGPdBq4W9PPvnp2jocGJQNLo62tm140V+8+iTjAaSgWqToWQuRGvaiWLW
      ERxx4q3dQ+oFN8dbVsyRc5ah04fxdZ9AG21DSIkVxjLuG8DkyOXTn/kMTcdrqTywl4BQKF28
      jE+fe2myMsQUMGz9AsqJw6SuWkIwZIQTezHkLoi3rJgjOfKRMpeTsXglmt6B9wANX0sAABiw
      SURBVHhlvCVFxISzQGcCiVwdOtzXiuv5nyDCASzn3IRp2ZaTv5tL1aEDJ/bj2fkYKDrMl9yN
      ed4SIDGqQ0/qAJoaorpiL2FbFnJAZfWaslmNB0pkB5iIueQA49lJBAeYNBx634uPsbvHzvyC
      ADV732BZ+Xcx6RM7TGE20YJ++l99nNDwANnbP40hqyDekmJOaLifvhd/i2yykH7JLaB3xFvS
      lJnUAWRJAklitKeREb8u4WN0Zpvup36MdfEaPN4gh//xKihZT9md38A2b2G8pcUELRig/r57
      GBoNIII+XC3HWfz1n8Rb1pSZ9F2/bvtNnF+WQWZmIV//x6+jTzpARAT6OzEUleFsaSLv3KtY
      8ok7Of6HB+MtK2aERgYIB4NsvO+PbLj3Sdz1R+ItKSImdYCXnnyYUPZqrrn6cn77iwcIJCvD
      RUTKis10/+nHSF21jB47hGxJQZtDm4lLBjNB9yidj99L5+/vJawzx1tSREzYBdrzylP8+cW3
      MVV08bxNR/qCNe9tkZpkMkQ4gH/Hw+gaKwhXH8S6bDuDh3Zx8F9uZfk//Tje8mKGTtbIy9ah
      Vf0Ft1dGSGmEPC70Vnu8pU2JCR1g0/YbmFe6nKGgAZtJBzrjzATCzTkEwYN/RAxU4tXZkQwG
      Si6/jqytV1L303/GnJEdb4Exw/f6g/g9TnIu+TipLdU01vThbq0nrWxtvKVNiUkHwX1NVTzz
      VjW6tFy6uob56X/+C3LyLTAhaudhwod+g67sGtIGjqJZVAbfepqhARemwkVYcufFW2LMkIK9
      OHIt9B/cR7pjFFOaFXvJ0njLmjKTO0BvH1suuRR/OAXvwJOoGuhnPrc6oVFb3kZXehGh9mZk
      vZ60JQsYNBdgSjGz8NJPohhN4+67nGjIFh2KkoLOO4LkMFJ44cXoEqiqx6SD4K2XfpxFC5di
      ddWy7pzLMcxEMswcQyncgDbcgOmsy5C0EdzmJXQceJeGF/5I46vPzJmbXwjBaDgdj2eA0UAQ
      YTJBZlm8ZUXEhA7gH+3jhVfeoL6pg3O3X0l/W3J/gKmgzN+E4ezPo/XXIS27jub9x1nxle+x
      /uvfo+OZX+Hu6Yi3xJjgHxqg9nAfqn0JC6/5BCeadbS8/ka8ZUXEhF2gt557ErI3ceyNP/Dq
      CyZu+MzdGJL9nykgoRRtRCnaiLezCdfgA0gmO/ZFBVjT05GVuNYjixmSrBD2uvGKXMTK23G9
      1oTBOxpvWREx4ZUYcrnQ5QgsFj1LVlxAii6E0ARScjFsUrSRNtDCmHOLyF+7id1fvx5bRibz
      tt+INTtvTnSDTKnpLL7yBrqe+g/2fH0PtrxiHCsviresiJjQAc46Zzs1DZ1kL94IuDjR3M6i
      BfORZywvLPERQhA+/gxiuA0UPZLBRtlXvs+8xqPo7amYcoviLTFmCJ+THCrIu/sL+Jv3IS2+
      EWPpxnjLiogJHWDh8vUsXL5+trTMEQRaVwW65bcReOvniGArkn0hKYu3TH5ogqG27wZhJXi0
      AjnsRh9oBBLLASadBfKPDrJ/31727t3L3kM1qMl9gidBAp0F/5v3Y9h8C7qCFQT2P0V4pJ+R
      1gbC/sRKGZwIyZpHuOsQbLgV3ZJNhBsr4i0pYiZ1gLeee4w9dZ34fD58/sBsaEpoJEnCsP5u
      JHUItXUH+rV3ooY1Kh74Fk0v/Yn99/8zPmd/vGXGBFWXgbe7m/DRP9D+7tto3sSLcZrUAQry
      85FkAzk5OeRkps1c71+oVO7bzbvvvsOx5u6ZsjIrSJYM9Gd9EbWrD/+On9PdPkDBhR9nzd3/
      h5LtH6f19b/FW2JM6Dh8EJ+tHH3YSJpZz7ChJN6SImbS+Th73mKKXW00NDSAKZXFC4tnZBAc
      HOnCbylg84oi3nl3L6IkL0GH2gIRGEUyhDFsvB45tQRrThWu9iZCXjeujmZMGYlf+Q7AnOpA
      zc5FX34WXZWNKI7Ea9ekDpA3bx7v7N5DnyvE2RdcgRJF0aipEPT5MFpSQJJRhEZYCCRVRVXV
      iOvMCyGmXDXs1PTOaCvDnZqaJ8J+5KqfQ95G5IGDhP0eUpavY6Sjmf33fwt78WJyzr0Ct9tN
      OBwmGAxOeV+G6aSijlu9LoLp2A/Z18KkSkdxp9joeOMJJFMKGRd9Eq/X+6H9AQwGQ9SaJ9M6
      Xpsi+Z4mdYB3nn8SuXgrnz+rkP/73ftY9x/fm5GqEGZHKp7OQdRwKqqsRydJSO9VhrPZbBGf
      L145wWpfM1r2MvSLLkb41hGseQzjogtYfuNdHzrm5L4LQmC3z3zocKxzgjVXF2GDmayLPk/m
      eX6C+x/AmJb2ITvBYDCqazdVZiUnODsnm3cqD1EhdyKb0mZsXwDFks08Rx8HDh6hdNnyBO3+
      gOyYT7j+WbThZtSeQygZS+ItaUaQzOmIwAjqQB3C04tkT8xq3uNXhRBirFa/0DhRc4jOQT+r
      z9pAmtWQrAoxoS2BNtpBuGUHcmoJyrytSNLpux6JXhVC8w2iNr0MxlR0JRcjKYY5VBUi7OX3
      z7xGeZ6RV96tBqDiWDNfveuWZETohEjIKfMwrLwt3kJmHNmcgbz8U/GWMS3GdwCdhZuvv4bu
      lhPc8YULyLAZOHasFiUZB5RkDjH+u16ScPa08/Qffs3Lbx+guqqSn/3ikeQG1lNAhH0IdzdC
      S7yFoYgRAuEdQARG4q0kKiaOBu3vYsgdJNjWyDGPmc989osf7BeW5LQIbz9a0ytI5gwIumHx
      NUhK7KYCzyiEQGt9E4IuUIOQsRTSEicdEiZZCV60ciP/8LWvkWcVuN1uqmuOEk7GAk2I6NyL
      XHIJ8sLLwJ4Pw43xljRjiOAo+J1Ii65GWnwNWl9iFcaFKYRC7H3tGVRFh724nNYTdZCwE5Sz
      hCkN4e5ChH3gc4IhJd6KZg7FgFBDY28AnxNJSbxtYCddB0hPz0C1L6Krthrn6CiaECSdYHyk
      /LMRbW8iBusgfQnYEnN+fCpIOjNy4WZE08sg65FKLo63pIgZ3wGEwOv1smTTFZSoMJJp4ZyL
      t2NIlkSZEEnRI5VcEm8Zs4bkmI/kmP/BB6FQ/MREwfgOoPp58Zkn6Rk6JX7dls2CouuT1eEm
      QAgVteVNxEgzcsEm5Mzls7pwOFsIoaF1H0Drq0LOXIFccDaSlHgbp0zwBtAY1mysLk0hrfxS
      lhckRqm7eKO27QLfAHLmctTWN5FMaUj2uVcSXRuoRXPWo+SsRu3cB3oLSs6qeMuKmPEdQNFD
      91EeeqEGe84BsuwGcBTy7a99DkNyi6RxESPNSGE/WLKQfIMIVyfMQQcQo23g6kKY0pB0RoTz
      OMwpB5ANfPYb/8bZ+97AtuBsSrKssygrcZFkA1p4GFkNIrQwkjw3SqD8T+TM5YQ73kVIMlrQ
      hRTyxltSVEyeEGM28OQjD2Ey6sGWwz233Yg++QYYFym1GFlvQjLYkB3zkWx58ZY0I0jWbGRr
      DpJiQCncCiMt8ZYUFZM6QGPdEVZe8HEuKM8HJHTJAfCEyLnrEdW/QQzUIS+6Gqy58ZY0I0g6
      M8rS69GaXgFPD/L880ELx1tWxEy+DpCZwWNPP07bwWywZnPnzdcmZ4HGQwiktjeRis4DSYLh
      JshawVxdN5EsWSiWDJh3DoTc0PEO5CVW+ZdJHaBs89V8e11w7AdJQZeMBh0foULIMxYTAzBQ
      NxYjo0u8FdIpEfKArIe0hWNP//rES/afdIeYF3ZVffDByVmgpBOcFkkBowP6qsbeAHoLzNVA
      OAC9bczpB2rHnMGaeEnxyY2yTyEmGWFaGAaPAWIsFGIcB5gLGWEAhP3gPA6KEdIWEVK1OZIR
      liQ6ZN17/f6PCDoTZJ8y/68mVvn8kw4QCoWmXJ5jNom0JMr7TLUsyqlEWxYlGltCCDRNw+eb
      nVKJ0Wicrp1or100tqLlpAPo9fpZeRVHQzS6wuEwOl1kL7hou0DR2Dq1dtFsfO/RaIyFnZls
      WyzaNGdXtKIJQIvm6R+trekcdybbSrQ2zdkxQDSvxkif/NOxFc2bZjrMRvdnNu3EytacfQMk
      STIV5owDhAMemhobcY56AY2Ojs73stfANdT/3uenQ9Dd1YWmCUYHexnxjJWA18JB2jvHqVIt
      NHo722jv6kMTgr7uTgKhsdmPoHeE7v7hiLQLLUx7SxNOV2wDyno7W6mvr6e7fwgQDPZ20tEz
      wHTmvbVwgMHhsX3AhFDpbm+lf2hs8kQN+WluasTt/3BIxMhgL22dvcQinVwN+WlpaqR/yIUA
      /J4RmprbCEY5+zQ3HEAL09jYit2RStX+fQQIcuDNN+lxBQFBTcVujjZ3neZAwUDbcXbuPURQ
      FbQ31lJZ2wDAYFcjr+8+eFpzrcerGQrIGBWNsKZSW1lBQ1svIKirqaWqriYi+bWH9xPSWThW
      WYErEKtSKhr1Ta1kZmZit5pxdjbS0OPC199EfbszulMGPVRW13G0thaA1rpKnEGF9rrD9Lr8
      VOzdh8lm58C+fScfPl5nB9WNvWiuHmoaO6fdqubGRsz2VJprDzE4PMy+gzVYDBoHDh2N6nxz
      wwFkHUvKyrCbZFRZhwLMW1hCd3MbYc8Asi2b0wWwinCAhm4PC/NTx06jt2ORfHjDGp29bory
      Uk9rrqWjG/9IH139I0gI7Bl5+Ib7EGqYoGTAEmGs1IhPML8gl5LcNPqGYjR1qLpxDXlpbGrG
      F1Lp6+tlYeliSkqX4OyP8kY0WFm7ZjVW41jfu3fIz6IFhSxaVEh3Sydho5287Gwy9BKu9x73
      vV39FC8qZf7iRbh6+6bdrNKly0mzGQioEqpnEEdOEbkF8xHB6OoSzQ0HAAa7mthbeYKzN29E
      B0gGBzp1lLaOXgrnnS4xXVBTsRdHTh4ul4sRlweA/Ow0ujo6EGYHhnHuYyHrWFa+iky9l+bu
      YZD1OPQqPb3tWDOj2ARvJiZOlBQuu/pSVpcv42hl5YwYmcoZYz0pNNrfwbsHqlixdgM2Y3IQ
      DIBQAxyqbmRF2WJCPi/v9wazHWbqu11k2I2nPa5gwRLMBAkGgwSCY8ncaTl5NNceISN7/Dj+
      /MwUWjt7GXb5sZjHzl04P4939x6jpCgjYv2pZpnWzh5a+4bJTotNOfGAa5Djja0MDQ6gGM3k
      5OTQ1HCC5oYTZOYURnVOLRxieGgIj8fDqMtDdrqZhqYOGho7yS8uRB90093Xx1AY7O8FTebk
      Z9Pa0EBrfQOOvOnHCh06XM2ysmUQDmC0ZzHa10ZPZyuKMS2q882JWCChqXS2t+ILqkiSnuLS
      IvwuH1azDqc7SJrNiDugkmI1n/Z4l2sEqzUFv9eN0WrHNTSALTUTj2sEh8Px9/aESndHO4ol
      jeyMFDwuD1arBefQMOnpaYy6XDhSJq8HJIRgaGiItNQUOtrasGbkkm63TO2LmfzsDPX3MOQJ
      MW9eIXpFYrC3C58wUpCbGdX7IOx309LRjRBgtKQwLz+Tno4OdLZ0stLsqCE/be2dZOXPx2bS
      nbx2I4O9jPihMD+H6QYTd7c3jw2yZR1FRUWIoJuuvhEKiwoxKJE/z+eEAyQq7zvAXG1fIly7
      OdEFSpIkWpIOkOQjTdIBknykSTpAko80c84BhOqn5sgRqmtqcfkjq1PZdeIglU0f3sVdaCod
      nWMLR70Nleytbo2Z1lNpa6zjyJEjVNceJxieyrK+n9de2kmst+AYHexlxBs8+fNgTztHjhzh
      RFP7ydXdD9Doau+IiYbWhlqcLn8MzjQ+AbeT2vqWD4WCKN/5zne+M6NWp4nP58NsPv305ekQ
      7ha+9d1fopO8PLdjH1s2n4Wzu50Bl58Uu5WBvj5GhgbwqjJWA/Q73VgN0D04ymDDfhp86ZRm
      G2lubiEsGxDeAe798YMUlSwiI9WOwZpCikmhraWZoNBhMcj0Dwzi7OtBVUyYjZGl6Pn9fsxm
      Mw/+8NsMB3Q4h10sXFDM8NAgfb09yDodHW1tmO2pjDoHcI06GfaGsVsl/vSHl9h43tm4B3vp
      6HGSkmKnu6cbu93O6GAvQVUwPDxMb08fOp1Ee0c31hQHhHw0NbdgsDog4MI56qGrqxurzcpr
      TzxMzaBMQW4WFqOeV558iL0NwzQf2kG7ms3SQgctzU34wjJ64eWB7z9AxoIS0h1pDPa04/SE
      cNgsEV07zdfHf373P+gKp7FuSQG9A0PYrGb6e3owWGwMdLYy7FOxWy0M9PXi84widAb6O9sZ
      GPXhSLGhhfw0N7XgDwmsNguuwV46+oZxpNhP7my6+/nf8+s/vsL6cy/ArpcYGuiZm+HQRWVn
      8Znbruf73/se9RVv8sRL+7DiZeM1n+Hw0/+NtWgRdbUt/Nu/3sXjf6nk659YwX8/dYDrlo19
      UScO72X3kXoaW53ccdOF9HR1sWv/Ec7JD3JELSPTuZv9LV7cQ05uv+szPPijH7F4ySK6fRb+
      7Z/umkTd6RGahs/vQ2eyEBzt5Qc/+BEl8zI51hlgUYZG+rrr4dhzjFoKaD12nC98658A8PQ3
      cf8DvyErzYy9dAtq/Vtc9Pl/ZsfvH+PcCzbzk0eeY14q9AZspONkzTWfZ2Df0wxJFoZDNm4/
      J4f7/nSIQouHoo3X0NPWSV//flYsKSUjxYIkK6zasAVbj0ztyCjtxyt5dfcRmlo6uP3T19HR
      083ePfsxenp5/Omd6IIjXP+Vb1OeP/UFveaq/ay/7i5aK/YQ1Dbw5O8e47Nf/iy/e/xPXHdx
      Ob9+Zi+S28mt3/x3/vyj76DLWsY1117COzt20tXewvk3f5Hm1x+jlzTam7r493//Ivfe9zNS
      rQpLzruZq7cuAy1IbZuH265eT0VVExcs1Pj3H/x67nWBAKrf+hvf+N/fYv7qC2ipqeW6O+/m
      7ts/Tl1lDea0edx2112ct9xO9+jpl0BCYZXcecXYcGMvXsnS5cu566arT6791zR384V7vszH
      tizgaHMfJeWb+Nydd2AUo1FrNthS2XbuBWzbtAGDAkvWbuOOO25g5cot3H7DZYyMjoAhnZtv
      u51PXLCU1t6x0I2ehiqWXvAJ7vnSPfQ0VHL59k28+vLLuOUsMiw61p5zGbfccBnrNm/nE5dt
      Yniwn7ouJ0sXLSboHYta3XbFDdz6ictxjQRYv6aci675JKtLx1bChRpm14tP8Js32/jU5Rvx
      B0Lk5BeSbpSRM4pYuaSMT916M521h8lbuJSyRQW0tvRE1PZ3d+2lsfYwTY11tDo1ls2zsn/f
      AVLnLaP28EGKFi1nWWkuzW39KJZMvvgPXyLbLGNLz2FhYRpdnd20hx3841fuZllRBj31RyC1
      iBVlS+nsGOuyuvubqalvorKukf3v7qHjWDVbr/vs3HSA8nOv4b4f/pBbrj6XZasW87dHf8Mj
      j/+V0uVL8Q938eRjv+OdE37yM4y0VL3Lb57468lwZoBD+3bT09fLwJAbWVFgtJdHn3mV9zuP
      iwsy+PUjv+LZ3fUsLcqKieaQz8XhgxVUHK7GHxpnDBAc4S9P/oG/vt3Awryxat05JWXUvvE0
      j/zqV6TPX0H+im207XiMRRvPP+1qr2ywUJJhp72nn8Ki+X/3+7TMNN549s8cbe4FQNLpueFz
      3+T6s9J54e1Kqir20t3XR+/AMKDDZBjhqSf+QvaCpfR1tBLUO8hNm3odJKF6aXXp2b5tM9dc
      vJ4Dh4+zZv0qnnrsSVatX8vSZcvoamtGM6eRbTdgsaVi1Mt0N9ZQ19xJZ3cv6EzYvN388reP
      U1nfRXbxEtThLga9GiUFY9fn2OEK1l90FVvPvxTDaBvm/CJ2/e33IM5wBgcHI/p7LeQVLe09
      p3ygivbGY+JYY5tQtaD4yQ9+ICqOVIq+YbfQNE20nKgRre0dormjR7idvaJv2CPcQ32i+ugJ
      0dHWJvyqEMP9neJQzXHhHuoTvU63UMMBcazmiGjvcQo1FBAdXT1CU0Oipa0tMq2adrJ9Tceq
      RUVFhTh0pEZ4vV7R2d0nwkGP6OweECHPkGjvdYrf/vR+sbvioOjoHRJChERrc7tQhSYGulvF
      kZpjIqhqwu91ifu+9z0xElRFyDsiuvuGhN8zJHoGRoVnuE/0DrlF0DsiKg8dFM2d/cI3OiD6
      hjwi4B4SXb1DQg0FRF31EdHrdAkhhOjvbhMuf1gINSBqa08Ir8spjlTXis6ODuEJhIRnuE8c
      qaoR/pAq2hqPicqqWuEPqVO+dlrQI5o7eoUQQoT9btHW1SvUkF/U1daKQFgITVNFa32tqKyu
      E4GwJjra2oQqhFBDflFbXSW6ujpE75BLtByvEW+9tVP88798VwSFEAPdreLQ4Uox7PYLIYTo
      7WoXHn9o7P+dLcI1MiT27HlXfMRCIVR2vPIG27ZfzAxUyIkYEWEoxO4dr7Fq2wXY9ONHQe5+
      6QlcjnK2b1oR80jMSJm9UAiN3S/9mR0VJ9h66fVccNbkO1WGXb387OFHkrFA8SRSB0g0EuHa
      /X83xWf7qSz3owAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
